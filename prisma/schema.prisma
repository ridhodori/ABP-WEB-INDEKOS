// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model Account {
  id                 String  @id @default(cuid())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  userId             String
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  user               User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("Verification_Token")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String  @id @default(cuid())
  username        String?  @unique
  password        String?
  name            String?
  email           String?  @unique
  address         String?  
  phonenum        String?     
  image           String?
  emailVerified   DateTime?
  user_status     Int
  accounts        Account[]
  sessions        Session[]
  registration    Registration[]
  payment         Payment[]
}

model Registration{
  id              String  @id @default(cuid())
  user            User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         String  
  gender          String    
  nik             Int     @unique
  confirm         Int
}

model Payment{
  id             String  @id @default(cuid())
  user           User    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id        String
  status         Int
  month          String
  rent           Rent?
  water          Water?
  electricity    Electricity?
}

model Rent{
  id              String  @id @default(cuid())
  payment         Payment? @relation(fields: [payment_id], references: [id])  
  payment_id      String?
  payment_status  Int
  rent_periode    Int
  rent_prices     Int
}

model Water{
  id              String  @id @default(cuid())
  payment         Payment? @relation(fields: [payment_id], references: [id])  
  payment_id      String?
  payment_status  Int
  water_price     Int
}

model Electricity{
  id              String  @id @default(cuid())
  payment         Payment? @relation(fields: [payment_id], references: [id])  
  payment_id      String?
  payment_status  Int
  electric_price  Int
}